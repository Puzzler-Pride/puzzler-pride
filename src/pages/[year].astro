---
import DefaultLayout from '../layouts/DefaultLayout.astro'
import { Breadcrumbs, BreadcrumbsItem, Card } from 'accessible-astro-components'
import contentData from '../content.json'
import puzzleData from '../puzzles.json'
import Counter from '../components/Counter.astro'

export async function getStaticPaths() {
  const yearData: { [key: string]: any } = contentData
  return Object.keys(yearData).map((year) => {

    const yearPuzzles = puzzleData
                          .filter(p => p.year === year)
                          .sort((a, b) => (
                            a.name.localeCompare(b.name) ||
                            a.author.localeCompare(b.author) || 
                            a.difficulty - b.difficulty)
                          )
    const puzzlesThisYear = yearPuzzles.length;
    const authorsThisYear = new Set(yearPuzzles.map(p => p.author)).size;
    const genresThisYear = new Set(yearPuzzles.map(p => p.genre)).size;
    return {
      params: { year },
      props: {
        year,
        yearMeta: yearData[year],
        puzzles: yearPuzzles,
        puzzlesThisYear,
        authorsThisYear,
        genresThisYear
      },
    }
  })
}

const { yearMeta, year, puzzles, puzzlesThisYear, authorsThisYear, genresThisYear } = Astro.props
const defaultLink = `https://l.puz.fun/pp${year}`
---

<DefaultLayout title={year} description={`Puzzles written for the ${year} edition of Puzzler Pride.`} url={year}>
  <div class="container">
    <div class="mt-12">
      <Breadcrumbs>
        <BreadcrumbsItem href="/" label="Home" />
        <BreadcrumbsItem currentPage={true} label={year} />
      </Breadcrumbs>
    </div>
  </div>
  <section class="my-12">
    <div class="container">
      <h1><span class="text-gradient">{year}: {yearMeta.tagline}</span></h1><br />
      <p>Get the PDF over at <a href={defaultLink}>The Griddle</a>.</p>
    </div>
  </section>
  <section class="my-24">
    <div class="container">
      <div class="grid grid-cols-1 gap-12 sm:grid-cols-2 md:grid-cols-3">
        <Counter count={puzzlesThisYear} title="Puzzles" sub="Total" />
        <Counter count={authorsThisYear} title="Authors" sub="Contributed" />
        <Counter count={genresThisYear} title="Genres" sub="Represented" />
      </div>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <table class="puzzle-table">
        <thead>
          <tr>
            <th>Puzzle</th>
            <th>Author</th>
            <th>Type</th>
            <th>Genre</th>
            <th>Difficulty</th>
            <th>Online Version</th>
            <th>PDF Page</th>
          </tr>
        </thead>
        <tbody>
          {
            puzzles.map(puzzle => (
              <tr>
                <td><strong>{puzzle.name}</strong></td>
                <td>{puzzle.author}</td>
                <td>{puzzle.category}</td>
                <td>{puzzle.genre}</td>
                <td class="text-center">{puzzle.difficulty}</td>
                <td>{puzzle.link ?
                  <a href={puzzle['link']} class="button size-small">{puzzle.linkText || 'Solve Online'}</a> :
                  <a href={defaultLink} class="button size-small color-secondary">PDF Only</a>
                }</td>
                <td>Page {puzzle.pdfPage}</td>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .puzzle-table tr {
    td, th {
      &:nth-child(1),
      &:nth-child(2) {
        width: 14em;
      }
      &:nth-child(3),
      &:nth-child(5),
      &:nth-child(7) {
        width: 7em;
      }
    }
  }
</style>
